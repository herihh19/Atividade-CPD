operacoes = 0

def merge(lista, i_esquerda, i_meio, i_direita):
    global operacoes
 
    index1 = i_meio - i_esquerda + 1
    index2 = i_direita - i_meio
 
    temp_esquerda = [0] * index1
    temp_direita = [0] * index2
 
    for i in range(0, index1):
        operacoes += 1
        temp_esquerda[i] = lista[i_esquerda + i]
    for j in range(0, index2):
        operacoes += 1
        temp_direita[j] = lista[i_meio + 1 + j]
 
    i, j, k = 0, 0, i_esquerda
 
    
    while i < index1 and j < index2:
        operacoes += 1
        if temp_esquerda[i] <= temp_direita[j]:
            lista[k] = temp_esquerda[i]
            i += 1
        else:
            lista[k] = temp_direita[j]
            j += 1
        k += 1
 
    while i < index1:
        lista[k] = temp_esquerda[i]
        i += 1
        k += 1
    while j < index2:
        lista[k] = temp_direita[j]
        j += 1
        k += 1

def mergeSort(lista, i_esquerda, i_direita):
    global operacoes
 
    if i_esquerda < i_direita:
        operacoes += 1
        meio = (i_esquerda + i_direita) // 2
        mergeSort(lista, i_esquerda, meio)
        mergeSort(lista, meio + 1, i_direita)
        merge(lista, i_esquerda, meio, i_direita)
    return lista

def print_merge_sort_result(lista, operacoes):
    print("Lista ordenada:", lista)
    print("Número de operações:", operacoes)

lista = [38, 27, 43, 3, 9, 82, 10]
sorted_list = mergeSort(lista, 0, len(lista) - 1)

print_merge_sort_result(sorted_list, operacoes)
